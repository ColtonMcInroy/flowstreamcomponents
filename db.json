[
	{
		"id": "code",
		"group": "Common",
		"name": "Code",
		"url": "https://cdn.totaljs.com/flowstream/components/code.html",
		"author": "Peter Širka",
		"icon": "fa fa-code",
		"color": "",
		"version": "2",
		"readme": "This component executes a custom JavaScript code as it is."
	},
	{
		"id": "connections",
		"group": "Linux Monitoring",
		"name": "Connections",
		"url": "https://cdn.totaljs.com/flowstream/components/connections.html",
		"author": "Peter Širka",
		"icon": "fa fa-network-wired",
		"color": "",
		"version": "1",
		"readme": "This component monitors open connections to the specific port in the Linux systems for the specific process. It uses `netstat` command.\n\n__Data Example__:\n\n```js\n{\n\tport: 80,\n\tconnections: 54\n}\n```"
	},
	{
		"id": "counter",
		"group": "Common",
		"name": "Counter",
		"url": "https://cdn.totaljs.com/flowstream/components/counter.html",
		"author": "Peter Širka",
		"icon": "fa fa-calculator",
		"color": "",
		"version": "1",
		"readme": "The component counts incoming messages."
	},
	{
		"id": "cpu",
		"group": "Linux Monitoring",
		"name": "CPU",
		"url": "https://cdn.totaljs.com/flowstream/components/cpu.html",
		"author": "Peter Širka",
		"icon": "fa fa-microchip",
		"color": "",
		"version": "1",
		"readme": "This component monitors CPU `% percentage` consumption in the Linux systems. It uses `mpstat` command with 10 seconds interval.\n\n__Data Example__:\n\n```js\n{\n\tcpu: 30, // percentage\n\tcores: [4, 60, 0], // percentage\n\tcount: 3 // count of cores\n}\n```"
	},
	{
		"id": "delay",
		"group": "Common",
		"name": "Delay",
		"url": "https://cdn.totaljs.com/flowstream/components/delay.html",
		"author": "Peter Širka",
		"icon": "far fa-clock-o",
		"color": "",
		"version": "3",
		"readme": "The component delays processing of a message."
	},
	{
		"id": "downloader",
		"group": "",
		"name": "Downloader",
		"url": "https://cdn.totaljs.com/flowstream/components/downloader.html",
		"author": "Total Avengers",
		"icon": "fa fa-download",
		"color": "",
		"version": "1",
		"readme": "## Input\n```js\n{\n\turl: 'https://example.com/file.jpg', // file url\n}\n```\n\n## Output\nA response object as returned by [DOWNLOAD()](https://docs.totaljs.com/total4/407ff001jy51c/#88aab001hd51c) function.\n```js\n{\n\tfilename: '/tmp/xyz.ext',\n\t...\n}\n```\nThe file will be automaticaly deleted once the message is destroyed."
	},
	{
		"id": "rpi-ds18b20",
		"group": "Raspberry Pi",
		"name": "DS18B20",
		"url": "https://cdn.totaljs.com/flowstream/components/rpi-ds18b20.html",
		"author": "Martin Smola",
		"icon": "fa fa-code",
		"color": "",
		"version": "1",
		"readme": ""
	},
	{
		"id": "end",
		"group": "Common",
		"name": "End",
		"url": "https://cdn.totaljs.com/flowstream/components/end.html",
		"author": "Peter Širka",
		"icon": "fas fa-skull-crossbones",
		"color": "",
		"version": "1",
		"readme": "The component destroys the incoming message."
	},
	{
		"id": "exec",
		"group": "Triggers",
		"name": "Exec",
		"url": "https://cdn.totaljs.com/flowstream/components/exec.html",
		"author": "Peter Širka",
		"icon": "fas fa-running",
		"color": "",
		"version": "1",
		"readme": "The component is extraordinary because it must be executed directly from the source code via the `flowstream.exec()` method. The component triggers received data into the Flow.\n\n```js\nvar opt = {};\nopt.id = 'ID_OF_EXEC_INSTANCE';\nopt.data = { custom: 'data' };\nopt.callback = function(err, msg) {\n\t// msg.uid;\n\t// msg.ref;\n\t// msg.repo {Object}\n\t// msg.data {Object}\n\t// msg.cloned {Number} how many times was the message cloned?\n\t// msg.duration {Number} in milliseconds\n};\n\n// optional:\n// opt.vars = {};    --> custom variables\n// opt.repo = {};    --> custom repository data and this data will be returned in the callback\n// opt.uid;          --> for storing some unique ID\n// opt.ref;          --> for storing some reference ID\nflowinstance.exec(opt);\n```"
	},
	{
		"id": "filewatcher",
		"group": "Files",
		"name": "File Watcher",
		"url": "https://cdn.totaljs.com/flowstream/components/filewatcher.html",
		"author": "Peter Širka",
		"icon": "fa fa-recycle",
		"color": "",
		"version": "1",
		"readme": "The component watches the existence of the file, then reads the content and sends it next. The file will be removed automatically after reading."
	},
	{
		"id": "filewriter",
		"group": "Files",
		"name": "File Writer",
		"url": "https://cdn.totaljs.com/flowstream/components/filewriter.html",
		"author": "Peter Širka",
		"icon": "fa fa-pencil",
		"color": "",
		"version": "1",
		"readme": "The component writes incoming data into the file."
	},
	{
		"id": "flashback",
		"group": "Common",
		"name": "Flashback",
		"url": "https://cdn.totaljs.com/flowstream/components/flashback.html",
		"author": "Peter Širka & Jakub Urban",
		"icon": "fa fa-history",
		"color": "",
		"version": "2",
		"readme": "The component remembers the data for repeating the action."
	},
	{
		"id": "hdd",
		"group": "Linux Monitoring",
		"name": "HDD",
		"url": "https://cdn.totaljs.com/flowstream/components/hdd.html",
		"author": "Peter Širka",
		"icon": "far fa-hdd",
		"color": "",
		"version": "1",
		"readme": "This component monitors HDD consumption (in MB) in the Linux systems. It uses `df` command.\n\n__Data Example__:\n\n```js\n{\n\tfree: 0,\n\ttotal: 0,\n\tused: 0\n}\n```"
	},
	{
		"id": "httproute",
		"group": "Triggers",
		"name": "HTTP Route",
		"url": "https://cdn.totaljs.com/flowstream/components/httproute.html",
		"author": "",
		"icon": "fa fa-route",
		"color": "",
		"version": "1",
		"readme": "This component registers an HTTP Route and sends request data next.\n\n__Output data__:\n\n```js\n{\n\t\"route\": String,\n\t\"params\": Object,\n\t\"query\": Object,\n\t\"body\": Object,\n\t\"files\": Array,\n\t\"headers\": Object,\n\t\"url\": String,\n\t\"ip\": String,\n\t\"cookies\": Object\n}\n```"
	},
	{
		"id": "influxdb",
		"group": "Databases",
		"name": "Influxdb",
		"url": "https://cdn.totaljs.com/flowstream/components/influxdb.html",
		"author": "Martin Smola",
		"icon": "fa fa-database",
		"color": "",
		"version": "1",
		"readme": "InfluxDB\n\n## Input\nExpected data for \"Write data\":\n```javascript\n{\n    measurement: '<measurement-name>',\n\tfields: {\n        fieldname: <fieldvalue>,\n    },\n    tags: {\n        tagname: '<tagvalue>'\n    }\n}\n```\n\nExpected data for \"Execute a Flux query\":\n```javascript\n{\n    query: 'from(bucket: \"Some Bucket\") |> range(start: -1h)'\n}\n```"
	},
	{
		"id": "input",
		"group": "FlowStream",
		"name": "Input",
		"url": "https://cdn.totaljs.com/flowstream/components/input.html",
		"author": "Peter Širka",
		"icon": "fa fa-broadcast-tower",
		"color": "",
		"version": "1",
		"readme": "The component receives data from a `Publish` component from another FlowStream instance."
	},
	{
		"id": "logger",
		"group": "Total.js API",
		"name": "Logger",
		"url": "https://cdn.totaljs.com/flowstream/components/logger.html",
		"author": "Peter Širka",
		"icon": "fas fa-binoculars",
		"color": "",
		"version": "1",
		"readme": "The component logs incoming messages into the Total.js Cloud Logger."
	},
	{
		"id": "memory",
		"group": "Linux Monitoring",
		"name": "Memory",
		"url": "https://cdn.totaljs.com/flowstream/components/memory.html",
		"author": "Peter Širka",
		"icon": "fa fa-memory",
		"color": "",
		"version": "1",
		"readme": "This component monitors a memory consumption (in MB) in the Linux systems. It uses `free` command.\n\n__Data Example__:\n\n```js\n{\n\tfree: 0,\n\ttotal: 0,\n\tused: 0\n}\n```"
	},
	{
		"id": "modified",
		"group": "Common",
		"name": "Modified",
		"url": "https://cdn.totaljs.com/flowstream/components/modified.html",
		"author": "Peter Širka",
		"icon": "fas fa-drafting-compass",
		"color": "",
		"version": "1",
		"readme": "The component compares incoming data with previous data."
	},
	{
		"id": "mongodb-insert",
		"group": "Databases",
		"name": "MongoDB Insert",
		"url": "https://cdn.totaljs.com/flowstream/components/mongodb-insert.html",
		"author": "Martin Smola",
		"icon": "fa fa-database",
		"color": "",
		"version": "1",
		"readme": "## Input\n\nExample\n```javascript\n{\n    database: 'database-name',\n    collection: 'collection-name',\n\tdata: { ... },  // data to insert, object for `insertOne` and an array of objects for `insertMany`\n\toptions: { ... }// insert options as passed to `insertOne(data, options)` or `insertMany(data, options)`\n}\n```"
	},
	{
		"id": "mongodb-query",
		"group": "Databases",
		"name": "MongoDB Query",
		"url": "https://cdn.totaljs.com/flowstream/components/mongodb-query.html",
		"author": "Martin Smola",
		"icon": "fa fa-database",
		"color": "",
		"version": "1",
		"readme": "Uses mquery under the hood. Here is the [documentation](https://www.npmjs.com/package/mquery)\n\n## Input\n\nExample\n```javascript\n{\n    database: 'database-name',\n    collection: 'collection-name',\n\tdata: <any> // this prop will be passed into the query function\n}\n```\n\n## Important\nIn the `.select()` you cannot use inclusion and exclusion together.\nThis is invalid: `.select('firstname -lastname')`\nValid exclusion: `.select('-lastname')` or `.select('-email -lastname')` etc.\nValid inclusion: `.select('name email')` or `.select('email lastname')` etc."
	},
	{
		"id": "mqtt-broker",
		"group": "MQTT",
		"name": "MQTT Broker",
		"url": "https://cdn.totaljs.com/flowstream/components/mqtt-broker.html",
		"author": "Martin Smola",
		"icon": "fa fa-exchange-alt",
		"color": "",
		"version": "1",
		"readme": ""
	},
	{
		"id": "mqtt-publish",
		"group": "MQTT",
		"name": "MQTT Publish",
		"url": "https://cdn.totaljs.com/flowstream/components/mqtt-publish.html",
		"author": "Martin Smola",
		"icon": "fa fa-sign-out",
		"color": "",
		"version": "1",
		"readme": "MQTT Publish\n\nInput:\n```javascript\n{\n\ttopic: 'some/topic',\n\tmessage: { some: 'data' },\n\t// optional\n\toptions: {\n\t\tqos: 0|1|2,\n\t\tretain: true|false\n\t}\n}\n```"
	},
	{
		"id": "mqtt-subscribe",
		"group": "MQTT",
		"name": "MQTT Subscribe",
		"url": "https://cdn.totaljs.com/flowstream/components/mqtt-subscribe.html",
		"author": "Martin Smola",
		"icon": "fa fa-sign-in",
		"color": "",
		"version": "1",
		"readme": "MQTT Subscribe"
	},
	{
		"id": "mysql",
		"group": "Databases",
		"name": "MySQL",
		"url": "https://cdn.totaljs.com/flowstream/components/mysql.html",
		"author": "Total Avengers",
		"icon": "fa fa-database",
		"color": "",
		"version": "1",
		"readme": "MySQL\n\n## Input\nExpected data:\n```javascript\n{\n\tquery: 'SELECT * FROM tblname;'\n}\n```"
	},
	{
		"id": "nosql",
		"group": "Databases",
		"name": "NoSQL",
		"url": "https://cdn.totaljs.com/flowstream/components/nosql.html",
		"author": "Total Avengers",
		"icon": "fa fa-database",
		"color": "",
		"version": "1",
		"readme": "## Outputs\n- response from nosql engine\n## Settings\n- collection: (optional) if not set, incomming data object must have a 'collection' property set\n- method: (optional) if not set, incomming data object must have a 'method' property set\n## Input\n```javascript\n{\n\tcollection: 'users', // optional, will override settings value\n\tmethod: 'find', // optional, will override settings value\n\t// for Insert, Update\n\tdata: { ... },\n\t// for Query, Read, Update, Remove\n\tfilter: [\n\t\t['where', 'sensor', 'temp'], // builder.where('sensor', 'temp');\n\t\t['limit', 2]                 // builder.limit(2);\n\t],\n\tupsert: true // only for update, if set then document will be inserted if it doesn't exist\n\taddid: true  // only for insert and update, if set then id prop will be automaticaly generated (for update only when upsert is also set)\n}\n```\n## Insert\n- inserts recieved data\n- expects data to be an Object\n- returns error, success, id\n## Read\n- returns first document found\n- requires `filter`\n- returns error, response\n## Update\n- updates document(s)\n- expects data to be an Object with all the props to be updated\n- requires `filter`\n- returns error, response\n- if response is 0 then update failed\n## Remove\n- removes document\n- requires `filter`\n- returns error, response\n- if response is 0 then remove failed\n## Query\n- returns all documents found\n- requires `filter`\n- returns error, response"
	},
	{
		"id": "opensync",
		"group": "External",
		"name": "OpenSync",
		"url": "https://cdn.totaljs.com/flowstream/components/opensync.html",
		"author": "Peter Širka",
		"icon": "fa fa-sync",
		"color": "",
		"version": "2",
		"readme": "This component receives a data from the [OpenSync](https://docs.totaljs.com/opensync/) app. Data example:\n\n```js\n{\n\tid: String,              // Internal ID\n\ttype: String,            // Parsed content-type (can be empty with the \"GET\" method)\n\tchannel: String,         // Channel\n\tip: String,              // Host IP address\n\tmethod: String,          // HTTP method (upper-case)\n\theaders: Object,         // Key:value\n\tquery: Object,           // Key:value\n\tbody: Object,            // JSON/key:value/String\n\tua: String,              // Parsed user-agent\n\tfiles: [Object Array]    // Uploaded files { filename: String, extension: String, type: String, size: Number, url: String, width: Number, height: Number }\n}\n```"
	},
	{
		"id": "output",
		"group": "FlowStream",
		"name": "Output",
		"url": "https://cdn.totaljs.com/flowstream/components/output.html",
		"author": "Peter Širka",
		"icon": "fa fa-crosshairs",
		"color": "",
		"version": "1",
		"readme": "The component sends data to a `Subscribe` component in another FlowStream."
	},
	{
		"id": "postgresql",
		"group": "Databases",
		"name": "PostgreSQL",
		"url": "https://cdn.totaljs.com/flowstream/components/postgresql.html",
		"author": "Total Avengers",
		"icon": "fa fa-database",
		"color": "",
		"version": "1",
		"readme": "PostgreSQL\n\n## Input\nExpected data:\n```javascript\n{\n\tquery: 'SELECT * FROM tblname;'\n}\n```"
	},
	{
		"id": "print",
		"group": "Common",
		"name": "Print",
		"url": "https://cdn.totaljs.com/flowstream/components/print.html",
		"author": "Peter Širka",
		"icon": "fa fa-print",
		"color": "",
		"version": "3",
		"readme": "The component prints incoming data in a JSON format."
	},
	{
		"id": "process",
		"group": "Linux Monitoring",
		"name": "Process",
		"url": "https://cdn.totaljs.com/flowstream/components/process.html",
		"author": "Peter Širka",
		"icon": "fa fa-procedures",
		"color": "",
		"version": "1",
		"readme": "This component monitors CPU (in %) and Memory consumption (in MB) in the Linux systems for the specific process. It uses `ps` command.\n\n__Data Example__:\n\n```js\n{\n\tgrep: 'nginx',\n\tcpu: 0.5,\n\tmemory: 45,\n\tfiles: 343,\n\tuptime: '1 day'\n}\n```"
	},
	{
		"id": "publish",
		"group": "FlowStream",
		"name": "Publish",
		"url": "https://cdn.totaljs.com/flowstream/components/publish.html",
		"author": "Peter Širka",
		"icon": "fa fa-crosshairs",
		"color": "",
		"version": "2",
		"readme": "The component publish the data to the specific `Input` component."
	},
	{
		"id": "queue",
		"group": "Common",
		"name": "Queue",
		"url": "https://cdn.totaljs.com/flowstream/components/queue.html",
		"author": "Peter Širka",
		"icon": "fas fa-list",
		"color": "",
		"version": "2",
		"readme": "A simple persistent queue for the incomming messages."
	},
	{
		"id": "read",
		"group": "Common",
		"name": "Read",
		"url": "https://cdn.totaljs.com/flowstream/components/read.html",
		"author": "Peter Širka",
		"icon": "fa fa-filter",
		"color": "",
		"version": "1",
		"readme": "This component reads a specific value according to the entered path."
	},
	{
		"id": "request",
		"group": "Common",
		"name": "Request",
		"url": "https://cdn.totaljs.com/flowstream/components/request.html",
		"author": "Peter Širka",
		"icon": "fas fa-cloud-download",
		"color": "",
		"version": "2",
		"readme": "The component makes a HTTP request. The response data will be serialized as the payload.\n\n__Response__:\n\n```json\n{\n\tstatus: Number,\n\theaders: { key: value },\n\tcookies: { key: value },\n\thost: String,\n\tbody: String/Object/Buffer\n}\n```"
	},
	{
		"id": "rpi-gpio",
		"group": "Raspberry",
		"name": "RPIgpio",
		"url": "https://cdn.totaljs.com/flowstream/components/rpi-gpio.html",
		"author": "Thecoolpeople",
		"icon": "fab fa-raspberry-pi",
		"color": "",
		"version": "1",
		"readme": "# GPIO\r\n\r\n__Write mode__:\r\n\r\n- Select the GPIO you want\r\n- Set the read/write option to write\r\n- Send true to the component to set the GPIO to HIGH\r\n- Send false to the component to set the GPIO to LOW\r\n\r\n__Read mode__:\r\n\r\n- Select the GPIO you want\r\n- Set the read/write option to write\r\n- Send true to the node so read the state of the gpio"
	},
	{
		"id": "rpi-i2c-read",
		"group": "Raspberry",
		"name": "RPIi2cRead",
		"url": "https://cdn.totaljs.com/flowstream/components/rpi-i2c-read.html",
		"author": "Thecoolpeople",
		"icon": "fab fa-raspberry-pi",
		"color": "",
		"version": "1",
		"readme": "# I2C Read\r\n\r\nParameters, can be transmitted to the component, or directly set as setting.\r\n\r\n- `address`: The I2C address of the device\r\n- `register`: The (starting) register\r\n- `readLength`: The length of how many bits will be read"
	},
	{
		"id": "rpi-i2c-write",
		"group": "Raspberry",
		"name": "RPIi2cWrite",
		"url": "https://cdn.totaljs.com/flowstream/components/rpi-i2c-write.html",
		"author": "Thecoolpeople",
		"icon": "fab fa-raspberry-pi",
		"color": "",
		"version": "1",
		"readme": "# I2C Write\r\n\r\nParameters, can be transmitted to the component, or directly set as setting.\r\n\r\n- `address`: The I2C address of the device\r\n- `register`: The (starting) register\r\n- `bytes`: The bytes which will be written"
	},
	{
		"id": "rpi-uart",
		"group": "Raspberry",
		"name": "RPIuart",
		"url": "https://cdn.totaljs.com/flowstream/components/rpi-uart.html",
		"author": "Thecoolpeople",
		"icon": "fab fa-raspberry-pi",
		"color": "",
		"version": "1",
		"readme": "# UART\r\n\r\n- send a string directly to a port\r\n- when device from a port sends data to the host, it will be send to the output of the component"
	},
	{
		"id": "rpi-uart-getdevices",
		"group": "Raspberry",
		"name": "RPIuartDevices",
		"url": "https://cdn.totaljs.com/flowstream/components/rpi-uart-getdevices.html",
		"author": "Thecoolpeople",
		"icon": "fab fa-raspberry-pi",
		"color": "",
		"version": "1",
		"readme": "# UART\r\n\r\nGet all devices which are possible to send"
	},
	{
		"id": "sms",
		"group": "Total.js API",
		"name": "SMS",
		"url": "https://cdn.totaljs.com/flowstream/components/sms.html",
		"author": "Peter Širka",
		"icon": "fas fa-tablet",
		"color": "",
		"version": "1",
		"readme": "The component sends a SMS message."
	},
	{
		"id": "sqlite3",
		"group": "Databases",
		"name": "SQLite3",
		"url": "https://cdn.totaljs.com/flowstream/components/sqlite3.html",
		"author": "Total Avengers",
		"icon": "fa fa-database",
		"color": "",
		"version": "1",
		"readme": "SQLite3 [Documentation](https://github.com/JoshuaWise/better-sqlite3/blob/HEAD/docs/api.md)\n\n```js\n{\n\t// query\n\tprepare: 'INSERT INTO cats (name, age) VALUES (?, ?)',\n\n\t// function name: run, get, all, exec\n\tfn: 'run',\n\n\t// data, optional\n\tdata: ['Joey', 2] // string/number or array\n\n}\n```\n\nFunctions:\n\t- [run](https://github.com/JoshuaWise/better-sqlite3/blob/HEAD/docs/api.md#runbindparameters---object)\n\t- [get](https://github.com/JoshuaWise/better-sqlite3/blob/HEAD/docs/api.md#getbindparameters---row)\n\t- [all](https://github.com/JoshuaWise/better-sqlite3/blob/HEAD/docs/api.md#allbindparameters---array-of-rows)\n\t- [exec](https://github.com/JoshuaWise/better-sqlite3/blob/HEAD/docs/api.md#execstring---this)"
	},
	{
		"id": "subscribe",
		"group": "FlowStream",
		"name": "Subscribe",
		"url": "https://cdn.totaljs.com/flowstream/components/subscribe.html",
		"author": "Peter Širka",
		"icon": "fa fa-broadcast-tower",
		"color": "",
		"version": "2",
		"readme": "The component subscribes to the specific `Output` component."
	},
	{
		"id": "switch",
		"group": "",
		"name": "Switch",
		"url": "https://cdn.totaljs.com/flowstream/components/switch.html",
		"author": "Total Avengers",
		"icon": "fa fa-random",
		"color": "",
		"version": "1",
		"readme": ""
	},
	{
		"id": "tail",
		"group": "Linux Monitoring",
		"name": "Tail",
		"url": "https://cdn.totaljs.com/flowstream/components/tail.html",
		"author": "Peter Širka",
		"icon": "far fa-file-alt",
		"color": "",
		"version": "1",
		"readme": "This component monitors last line in some text file with the help of `tail` command in the Linux systems.\n\n__Data Example__:\n\n```js\n{\n\tvalue: 'Some meessage'\n\tdate: Date\n}\n```"
	},
	{
		"id": "telemetry",
		"group": "Common",
		"name": "Telemetry",
		"url": "https://cdn.totaljs.com/flowstream/components/telemetry.html",
		"author": "Martin Smola",
		"icon": "fa fa-rss-square",
		"color": "",
		"version": "3",
		"readme": "The component shows data in a template.\nAssuming this incomming data:\n```javascript\n{\n\tspeed: 1,\n\tnested: { value: 2 },\n\tarray: [{ value: 3 }]\n}\n```\nThe paths bust be defined as:\n```\nspeed         // -> 1\nnested.value  // -> 2\narray.0.value // -> 3\n```"
	},
	{
		"id": "test",
		"group": "",
		"name": "Test",
		"url": "https://cdn.totaljs.com/flowstream/components/test.html",
		"author": "Total Avengers",
		"icon": "fa fa-info",
		"color": "",
		"version": "1",
		"readme": "Test"
	},
	{
		"id": "timer",
		"group": "Triggers",
		"name": "Timer",
		"url": "https://cdn.totaljs.com/flowstream/components/timer.html",
		"author": "Peter Širka",
		"icon": "far fa-clock-o",
		"color": "",
		"version": "2",
		"readme": "The component triggers data into the Flow in the specified interval."
	},
	{
		"id": "trigger",
		"group": "Triggers",
		"name": "Trigger",
		"url": "https://cdn.totaljs.com/flowstream/components/trigger.html",
		"author": "Peter Širka",
		"icon": "fa fa-bullhorn",
		"color": "",
		"version": "2",
		"readme": "The component triggers data into the Flow."
	}
]